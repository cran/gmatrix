OBJ_FILES = dist.o conversions.o general.o ops.o manipulation.o  matrix.o
DLLOUT = gmatrix.dll

VS_IB = "C:/Program Files (x86)/Microsoft Visual Studio 9.0/VC/lib"  # CHECK
CUDA_SDK_INC = "$(NVSDKCOMPUTE_ROOT)/C/common/inc"
CUDA_SDK_LIB = "$(NVSDKCOMPUTE_ROOT)/C/common/lib"
CUDA_LIB = "C:/CUDA/lib"
NVCC_ARCH     ?= sm_20


R_INC = "C:\Program Files\R\R-2.15.1\include" # CHECk
R_LIB = "D:/R2.10-src-R.dll/R-2.10.1/src/gnuwin32" # "G:/R-2.10.1/src/gnuwin32"
LIBS = cuda.lib cudart.lib cutil32.lib cublas.lib Rdll.lib

#-DWIN64
NVCC_FLAGS = -shared  -arch=${NVCC_ARCH} 


gmatrix.dll: $(OBJ_FILES)
        link /DLL /OUT:$(DLLOUT) $(OBJ_FILES) /LIBPATH:$(R_LIB) /LIBPATH:$(CUDA_LIB) /LIBPATH:$(CUDA_SDK_LIB) $(LIBS)
conversions.o: 
	$(NVCC) -c conversions.cu -o conversions.o $(NVCC_FLAGS)  -I$(R_INC_PATH)
	
manipulation.o: 
	$(NVCC) -c manipulation.cu -o manipulation.o $(NVCC_FLAGS)  -I$(R_INC_PATH)

general.o:
	$(NVCC) -c general.cu -o general.o $(NVCC_FLAGS) -I$(R_INC_PATH)

matrix.o: 
	$(NVCC) -c matrix.cu -o matrix.o $(NVCC_FLAGS) -I$(R_INC_PATH)
 	
ops.o: 
	$(NVCC) -c ops.cu -o ops.o $(NVCC_FLAGS) -I$(R_INC_PATH)
	
dist.o: 
	$(NVCC) -c dist.cu -o dist.o $(NVCC_FLAGS) -I$(R_INC_PATH)
 	
       
clean:
      rm $(OBJ_FILES) *.linkinfo rgpu.exp rgpu.lib rgpu.dll